?plot
source("more/present.R")
present
dim(present)
names(present)
plot(present$year, present$boys/present$girls)
plot(present$year, present$boys/present$girls)
max(present$boys+present$girls)
which.max(present$boys+present$girls)
which.max(present$boys+present$girls)
present(22)
which.max(present$boys+present$girls)
present[22]
which.max(present$boys+present$girls)
present$year[22]
which.max(present$boys+present$girls)
present$year[22]
present$year(which.max(present$boys+present$girls))
which.max(present$boys+present$girls)
present$year[22]
present$year[which.max(present$boys+present$girls)]
max(present$boys+present$girls)
which.max(present$boys+present$girls)
present$year[22]
present$year[which.max(present$boys+present$girls)]
data(iris)
getLabs()
library(DATA606)
data("iris")
data(iris)
View(present)
c(57,66)
exams <- c(57,66)
exams
boxplot(exams)
exams <- c(57,66,69,71,72,73,74,77,78,78,79,79,81,81,82,83,83,88,89,94)
summary((exams))
boxplot(exams)
45/69
30/34
69-45
45+30
69+34
75+24
30+45
75+8
75+28
library(DATA606)
View(iris)
data(heartTr)
data(iris)
View(present)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
data(iris)
View(present)
View(present)
data("iris")
View(present)
library(XML)
install.packages("XML")
library(XML)
mushrooms <- readHTMLTable("https://archive.ics.uci.edu/ml/machine-learning-databases/mushroom/agaricus-lepiota.data")
test <- htmlParse("https://archive.ics.uci.edu/ml/machine-learning-databases/mushroom/agaricus-lepiota.data")
test <- read.csv(url("https://archive.ics.uci.edu/ml/machine-learning-databases/mushroom/agaricus-lepiota.data"))
install.packages("RSQLite")
knitr::opts_chunk$set(echo = TRUE)
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
cat(str_extract_all(text, "[A-Z]"))
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
raw.data <-"555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5553642Dr. Julius Hibbert"
name <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
name
example.a <- "0$, 900$, 6$, $, $500, $10"
unlist(str_extract_all(example.a, "[0-9]+\\$"))
example.b <- "This string will have 31 words returned from the regular expression. The first word of each sentence is not included because it starts with a capital, even though it is between 1 and 4 characters. Even though there is a period at the end of this sentence, the word will be included since it specifies the word edge."
unlist(str_extract_all(example.b, "\\b[a-z]{1,4}\\b"))
str_count(example.b, "\\b[a-z]{1,4}\\b")
example.c <- c(".txt$", ".txt", "a.txt", "b.txt", "abcd.txt", "123.txt", "something really long.txt", "test")
unlist(str_extract_all(example.c, ".*?\\.txt$"))
example.d <- "I will test out several dates.
05/15/2017
6/12/2015
12/04/2014
03-03-2003
We should expect to receive 2 results. "
unlist(str_extract_all(example.d, "\\d{2}/\\d{2}/\\d{4}"))
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
cat(str_extract_all(text, "[A-Z]"))
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
cat(str_extract_all(text, "[A-Z]"))
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
cat(unlist(str_extract_all(text, "[A-Z]")))
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")))
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
str_trim(cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))))
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")))
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))
cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")))
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))
cat(str_c(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))))
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))
cat(str_c(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))))
?str_c
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))
cat(str_c(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep = "", collapse = NULL))
?str_c
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))
cat(str_c(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep = "", collapse = NULL))
?str_c
?cat
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))
cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep="")
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))
cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep="")
str_replace_all(cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep=""), ".", " ")
?str_replace_all
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))
cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep="")
str_replace_all(cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep=""), "\\.", " ")
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))
cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep="")
str_replace_all(cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep=""), "\\.", "-")
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))
message <- c(cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep=""))
str_replace_all(message, "\\.", " ")
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))
message <- c(cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep=""))
message
str_replace_all(message, "\\.", " ")
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))
message <- c("cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep="")")
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(text, "[A-Z]|[[:punct:]]"))
message <- cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep="")
text <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- cat(unlist(str_extract_all(text, "[A-Z]|[[:punct:]]")),sep="")
example.e <- "Here are a couple examples:
<greeting>Hello</greeting>
<heading>Reminder</heading>
<body>Don't forget me this weekend!</body>"
unlist(str_extract_all(example.e, "<(.+?)>.+?</\\1>"))
example.e <- "Here are a couple examples:
<greeting>Hello</greeting>
<heading>Reminder</heading>
<body>Don't forget me this weekend!</body>"
unlist(str_extract_all(example.e, "<(.+?)>.+?</\\1>"))
exmaple.e
example.e <- "Here are a couple examples:
<greeting>Hello</greeting>
<heading>Reminder</heading>
<body>Don't forget me this weekend!</body>"
unlist(str_extract_all(example.e, "<(.+?)>.+?</\\1>"))
example.e
example.e <- "Here are a couple examples:
<note>
<greeting>Hello</greeting>
<heading>Reminder</heading>
<body>Don't forget me this weekend!</body>
</note>"
unlist(str_extract_all(example.e, "<(.+?)>.+?</\\1>"))
example.e
example.e <- "Here are a couple examples:
<note>
<greeting>Hello</greeting>
<heading>Reminder</heading>
<body>Don't forget me this weekend!</body>
</note>"
unlist(str_extract_all(example.e, "<(.+?)>.+?</\\1>"))
example.e <- "Here are a couple examples:
<note>
<greeting>Hello</greeting>
<heading>Reminder</heading>
<body>Don't forget me this weekend!</body>
</note>
Since I wrote these on separate lines, R adds a new line (\n) to the string and will not pull the note tag using this regex. The default behavior is to delimit the input string by new lines."
unlist(str_extract_all(example.e, "<(.+?)>.+?</\\1>"))
first_name <- unlist(str_extract_all(name, ",?[[:alpha:]]* "))
first_name <- unlist(str_extract_all(name, ",?[[:alpha:]]* "))
first_name
first_name <- unlist(str_extract_all(name, ",?[[:alpha:]]*"))
first_name
first_name <- unlist(str_extract_all(name, "[[:alpha:].]*"))
first_name
first_name <- unlist(str_extract_all(name, "[[:alpha:].]+"))
first_name
first_name <- str_extract_all(name, "[[:alpha:].]+")
first_name
first_name <- str_extract(name, "[[:alpha:].]+")
first_name
first_name <- str_extract(name, ",?[[:alpha:].]+")
first_name
first_name <- str_extract(name, ",[[:alpha:].]+")
first_name
first_name <- str_extract(name, ", ?[[:alpha:].]+")
first_name
first_name <- str_extract(name, ",? ?[[:alpha:].]+")
first_name
str_detect(name, "Rev.")
str_detect(name, "Rev.")
?str_detect
str_detect(name, "Rev.|Dr.")
?str_detect
first_name <- str_extract(name, ", [[:alpha:].]+")
first_name
first_name <- str_extract(name, ", ([[:alpha:].]+)")
first_name
first_name <- str_extract(name, "^, ([[:alpha:].]+)")
first_name
str_count(name, "\\w+")
str_count(name, "[[:aplha] ]+")
str_count(name, "[[:alpha:] ]+")
str_detecty(str_count(name, "[[:alpha:] ]+"), "3")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_count(name, "[[:alpha:] ]+")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_count(name, "[[:alpha:]]+ ?")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_count(name, "^\\w+.")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_count(name, "^\\w+\\.")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_count(name, "\\w+\\.?")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
first_name <- str_extract(name, "\\w+")
first_name
first_name <- str_extract(name, "\\w+")
first_name
?str_replace
str_detect(name, "Rev.|Dr.")
str_detect(name, "[[:alpha:]]{2,}\\.")
first_name <- str_extract(name, "[[:alpha:]]+, ")
first_name
?str_replace
first_name <- str_extract(name, "[[:alpha:]]+, (\\w)")
first_name
?str_replace
first_name <- str_extract(name, "[[:alpha:]]+, (\\w+)")
first_name
?str_replace
first_name <- str_extract(name, "[[:alpha:]]+, [[:alpha:].]")
first_name
?str_replace
first_name <- str_extract(name, "[[:alpha:]]+, [[:alpha:].]+")
first_name
?str_replace
first_name <- str_extract(name, "[[:alpha:]]+, ([[:alpha:].]+)")
first_name
?str_replace
first_name <- str_extract(name, "[[:alpha:]]+, ([[:alpha:].]+)")
test <- str_replace_all(name, "[[:alpha:]]+, ([[:alpha:].]+)", "/1")
first_name
test
?str_replace
test <- str_replace_all(name, "[[:alpha:]]+, ([[:alpha:].]+)", "//1")
test
first_name <- str_extract(name, "[[:alpha:]]+, ([[:alpha:].]+)")
test <- str_replace_all(name, "[[:alpha:]]+, ([[:alpha:].]+)", "\\1")
first_name
test
?str_replace
test
first_name
first_name <- str_extract(name, "[[:alpha:]]+, ([[:alpha:].]+)")
test <- str_replace_all(name, "[[:alpha:]]+, ([[:alpha:].]+)", "\\1")
first_name
test
?str_replace
first_name <- str_extract(name, "[[:alpha:]]+, ([[:alpha:].]+)")
test <- str_replace_all(name, "[[:alpha:]]+, ([[:alpha:]\\.]+)", "\\1")
first_name
test
?str_replace
first_name <- str_extract(name, "[[:alpha:]]+, ([[:alpha:].]+)")
test <- str_replace_all(name, "[[:alpha:]]+, ([[:alpha:].]+).*", "\\1")
first_name
test
?str_replace
first_name <- str_extract(name, "[[:alpha:]]+, ([[:alpha:].]+)")
test <- str_replace_all(name, "([[:alpha:]]+), ([[:alpha:].]+).*", "\\2 \\1")
first_name
test
?str_replace
test <- str_replace_all(name, "([[:alpha:]]+), ([[:alpha:].]+).*", "\\2 \\1")
test <- str_replace_all(test, "[[:alpha:]]{2,}\\. ([[:alpha:]]+) ([[:alpha:]]+)", "\\1 \\2")
test
str_count(name, "\\w+^\\.$")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_detect(name, "[[:alpha:]]+")
str_count(name, "\\w+^\\.")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_detect(name, "[[:alpha:]]+")
str_count(name, "\\w+\\.")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_detect(name, "[[:alpha:]]+")
str_count(name, "^\\w+\\.")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_detect(name, "[[:alpha:]]+")
str_count(name, "\\w+^[.]")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_detect(name, "[[:alpha:]]+")
str_count(name, "\\w+[^.]")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_detect(name, "[[:alpha:]]+")
str_count(name, "\\w+[^.]$")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_detect(name, "[[:alpha:]]+")
str_count(name, "\\w+[^.]")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_detect(name, "[[:alpha:]]+")
str_count(name, "\\w+[^.] ")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_detect(name, "[[:alpha:]]+")
str_count(name, "\\w+[^.]")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_detect(name, "\\w+[^.]")
str_count(name, "\\w+[^.]")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_extract_all(name, "\\w+[^.]")
str_detect(name, "\\w+[^.]")
str_count(name, "\\w+[^.]")
str_count(name,"^([[:alpha:]]{2,}\\.)")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_extract_all(name, "\\w+[^.]")
str_detect(name, "\\w+[^.]")
str_count(name, "\\w+[^.]")
str_count(name,"^([[:alpha:]]{2,}\\.)")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_extract_all(name, "\\w+[^.]")
str_detect(name, "\\w+[^.]{3,}")
str_count(name, "\\w+[^.]")
str_count(name,"^([[:alpha:]]{2,}\\.)")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_extract_all(name, "\\w+[^.]")
str_detect(name, "\\w+{3,}")
str_count(name, "\\w+[^.]")
str_count(name,"^([[:alpha:]]{2,}\\.)")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_extract_all(name, "\\w+[^.]")
str_detect(name, "(\\w+){3,}")
str_count(name, "\\w+[^.]")
str_count(name,"^([[:alpha:]]{2,}\\.)")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_extract_all(name, "\\w+[^.]")
str_detect(name, "(\\w+ ){3,}")
str_count(name, "\\w+")
str_count(name,"^([[:alpha:]]{2,}\\.)")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_extract_all(name, "\\w+[^.]")
str_detect(name, "(\\w+ ){3,}")
str_count(name, "\\w+")
str_count(name,"^([[:alpha:]]{2,}\\.)")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_extract_all(name, "\\w+[^.]")
str_detect(name, "(\\w+){2,}")
str_count(name, "\\w+")
str_count(name,"^([[:alpha:]]{2,}\\.)")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_extract_all(name, "\\w+[^.]")
str_detect(name, "(\\w+){3,}")
str_count(name, "\\w+")
str_count(name,"^([[:alpha:]]{2,}\\.)")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_extract_all(name, "\\w+[^.]")
str_detect(name, "(\\w+){3,}")
name
str_count(name, "\\w+[^.] |$")
str_count(name,"^([[:alpha:]]{2,}\\.)")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_extract_all(name, "\\w+[^.]")
str_detect(name, "\\w{3,}")
name
str_count(name, "\\w+[^.]( |$)")
str_count(name,"^([[:alpha:]]{2,}\\.)")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_extract_all(name, "\\w+[^.]")
str_detect(name, "\\w{3,}")
name
str_count(name, "\\w+[^.]( |$)")
str_count(name, "\\w+^([[:alpha:]]{2,}\\.)")
str_count(name,"^([[:alpha:]]{2,}\\.)")
str_detect(str_count(name, "[[:alpha:] ]+"), "3")
str_extract_all(name, "\\w+[^.]")
str_detect(name, "\\w{3,}")
name
str_detect(name, "[[:alpha:], ]{2,}")
str_detect(name, "[[:alpha:], ]{3,}")
str_detect(name, "[[:alpha:], ]{3,}")
str_detect(name, "\\b{3,}")
str_detect(name, "\\b\\.")
str_detect(name, "\\b\\.")
?str_count
str_count(name, "[[:alpha:]]{2,}\\.")
str_detect(name, "\\b\\.")
?str_count
str_count(name, "^[[:alpha:]]{2,}\\.")
str_detect(name, "\\b\\.")
?str_count
str_count(name, "^([[:alpha:]]{2,}\\.)")
str_detect(name, "\\b\\.")
?str_count
str_count(name, "[[:alpha:]]{2,}\\.")
str_detect(name, "([[:alpha:]]+, [[:alpha:].]+|[[:alpha:]]{2,}\\. ([[:alpha:]]+) ([[:alpha:]]+).*")
str_count(name, "[[:alpha:]]{2,}\\.")
str_detect(name, "([[:alpha:]]+, [[:alpha:].]+|[[:alpha:]]{2,}\\. ([[:alpha:]]+) ([[:alpha:]]+)).*")
?str_count
str_count(name, "[[:alpha:]]{2,}\\.")
str_detect(name, "")
str_count(name, "[[:alpha:]]{2,}\\.")
str_count(name, "\\w+")
str_detect(name, "")
Title_words <- str_count(name, "[[:alpha:]]{2,}\\.")
all_words <- str_count(name, "\\w+")
str_detect(name, "")
Title_words <- str_count(name, "[[:alpha:]]{2,}\\.")
all_words <- str_count(name, "\\w+")
all_words-Title_words
str_detect(name, "")
Title_words <- str_count(name, "[[:alpha:]]{2,}\\.")
all_words <- str_count(name, "\\w+")
all_words-Title_words
str_detect(all_words-Title_words, "3")
setwd("~/GitHub/MSDS/DATA607/Week 3")
