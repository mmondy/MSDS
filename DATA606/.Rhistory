library(ggplot2)
ggplot(data=top_15_skills, aes(x=SkillName,y=n)) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle("Top 15 Skills Desired in Data Scientist") +
scale_x_discrete(
limits= c("Agile", "AI","Tableau", "Natural Language Processing", "MATLAB", "Spark","Hive","Hadoop","C","Data Mining",
"Data Science", "Big Data", "R","Python","Machine Learning")
)
View(top_15_skills)
Most_valued_skills <- count(skills2, skill) %>% arrange(desc(n))
Most_valued_skills
top_15_skills <- dbGetQuery(mydb, "select SkillName, count(*) as n from project3.indeeddatascienceskills
group by SkillName
order by 2 desc
Limit 15;")
library(ggplot2)
ggplot(data=top_15_skills, aes(x=SkillName,y=n)) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle("Top 15 Skills Desired in Data Scientist") +
scale_x_discrete(
limits= c("Java", "AI","Tableau", "Natural Language Processing", "MATLAB", "Spark","Hive","Hadoop","C","Data Mining",
"Data Science", "Big Data", "R","Python","Machine Learning")
)
Most_valued_skills <- count(skills2, skill) %>% arrange(desc(n))
Most_valued_skills
top_15_skills <- dbGetQuery(mydb, "select SkillName, count(*) as n from project3.indeeddatascienceskills
group by SkillName
order by 2 desc
Limit 15;")
library(ggplot2)
ggplot(data=top_15_skills, aes(x=SkillName,y=n)) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle("Most Valued Data Science Skills") +
scale_x_discrete(
limits= c("Java", "AI","Tableau", "Natural Language Processing", "MATLAB", "Spark","Hive","Hadoop","C","Data Mining",
"Data Science", "Big Data", "R","Python","Machine Learning")
)
theme(
axis.title.y=element_blank(),        #removes y-axis label
)
Most_valued_skills <- count(skills2, skill) %>% arrange(desc(n))
Most_valued_skills
top_15_skills <- dbGetQuery(mydb, "select SkillName, count(*) as n from project3.indeeddatascienceskills
group by SkillName
order by 2 desc
Limit 15;")
library(ggplot2)
ggplot(data=top_15_skills, aes(x=SkillName,y=n)) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle("Most Valued Data Science Skills") +
scale_x_discrete(
limits= c("Java", "AI","Tableau", "Natural Language Processing", "MATLAB", "Spark","Hive","Hadoop","C","Data Mining",
"Data Science", "Big Data", "R","Python","Machine Learning")
)
theme(
axis.title.y=element_blank()        #removes y-axis label
)
Most_valued_skills <- count(skills2, skill) %>% arrange(desc(n))
Most_valued_skills
top_15_skills <- dbGetQuery(mydb, "select SkillName, count(*) as n from project3.indeeddatascienceskills
group by SkillName
order by 2 desc
Limit 15;")
library(ggplot2)
ggplot(data=top_15_skills, aes(x=SkillName,y=n)) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle("Most Valued Data Science Skills") +
scale_x_discrete(
limits= c("Java", "AI","Tableau", "Natural Language Processing", "MATLAB", "Spark","Hive","Hadoop","C","Data Mining",
"Data Science", "Big Data", "R","Python","Machine Learning")
) +
theme(
axis.title.y=element_blank()        #removes y-axis label
)
Most_valued_skills <- count(skills2, skill) %>% arrange(desc(n))
Most_valued_skills
top_15_skills <- dbGetQuery(mydb, "select SkillName, count(*) as n from project3.indeeddatascienceskills
group by SkillName
order by 2 desc
Limit 15;")
library(ggplot2)
ggplot(data=top_15_skills, aes(x=SkillName,y=n)) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle("Most Valued Data Science Skills") +
scale_x_discrete(
limits= c("Java", "AI","Tableau", "Natural Language Processing", "MATLAB", "Spark","Hive","Hadoop","C","Data Mining",
"Data Science", "Big Data", "R","Python","Machine Learning")
) +
theme(
axis.title.y=element_blank(),
axis.title.x=element_blank(),
)
library(rvest)
library(stringr)
library(RMySQL)
library(tidyr)
library(dplyr)
getData <- function(url, x){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
#test <- str_split(str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}"), ", ")
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
View(getData)
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
IndeedJobTitle_clean
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
IndeedJobTitle_clean
IndeedJobTitle<-"https://www.indeed.com/jobs?q=data+scientist&l=" %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
IndeedJobTitle_clean
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
IndeedJobLocation
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
print(IndeedJobTitle_clean)
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
print(IndeedJobTitle_clean)
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
print(IndeedJobLocation_clean)
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
print(IndeedSkills_clean)
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
print(IndeedJobTitle_clean)
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
print(IndeedJobLocation_clean)
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
print(IndeedSkills_clean)
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
IndeedJobLocation_clean
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <<- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
print(IndeedJobTitle_clean)
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <<- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
print(IndeedJobLocation_clean)
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <<- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
print(IndeedSkills_clean)
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
View(page1)
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <<- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <<- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <<- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=10")
page2 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=20")
page3 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=30")
page4 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=40")
page5 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=50")
page6 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=50")
page6 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
IndeedJobTitle_clean
IndeedJobLocation_clean
IndeedSkills_clean
IndeedSkills<-"https://www.indeed.com/jobs?q=Data+Scientist&start=50" %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills<-"https://www.indeed.com/jobs?q=Data+Scientist&start=50" %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <<- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
IndeedSkills
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=60")
page7 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=70")
page8 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=80")
page9 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=90")
page10 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
View(page10)
View(page10)
View(page10)
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(stringr)
library(RMySQL)
library(tidyr)
library(dplyr)
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <<- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <<- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <<- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=10")
page2 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=20")
page3 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=30")
page4 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=40")
page5 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=50")
page6 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <<- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <<- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <<- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=10")
page2 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=20")
page3 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=30")
page4 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=40")
page5 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
setwd("~/GitHub/MSDS/DATA606")
# load data
read.csv("C:/Users/mondy/Documents/GitHub/MSDS/DATA606")
?read.csv
setwd("~/GitHub/MSDS/DATA606")
# load data
setwd("~/GitHub/MSDS/DATA606")
read.csv("ff_data.csv")
# load data
setwd("~/GitHub/MSDS/DATA606")
ff_data <- read.csv("ff_data.csv")
View(ff_data)
# load data
setwd("~/GitHub/MSDS/DATA606")
ff_data <- read.csv("ff_data.csv", header = TRUE)
View(ff_data)
View(ff_data)
table(ff_data$Classification)
table(ff_data$Nature.of.death)
names(ff_data)
View(ff_data)
#proportion of deaths of Career firefighters
career <- subset(ff_data, ff_data$Classification == "career")
prop_career <- career/2104
#proportion of deaths of Career firefighters
career <- subset(ff_data, ff_data$Classification == "Career")
prop_career <- career/2104
View(career)
#proportion of deaths of Career firefighters
career <- subset(ff_data, ff_data$Classification == "Career")
prop_career <- table(career$Classification/2104)
#proportion of deaths of Career firefighters
career <- subset(ff_data, ff_data$Classification == "Career")
prop_career <- nrow(career)
prop_career
#proportion of deaths of Career firefighters
career <- subset(ff_data, ff_data$Classification == "Career")
prop_career <- nrow(career)/2104
prop_career
#proportion of deaths of Volunteer firefighters
volunteer <- subset(ff_data, ff_data$Classification == "Volunteer")
prop_volunteer <- nrow(volunteer)/2104
prop_volunteer
combined <- subset(ff_data, ff_data$Classification == "Career" | ff_data$Classification == "Volunteer" )
#proportion of deaths of Career firefighters
career <- subset(ff_data, ff_data$Classification == "Career")
prop_career <- nrow(career)/2104
prop_career
#proportion of deaths of Volunteer firefighters
volunteer <- subset(ff_data, ff_data$Classification == "Volunteer")
prop_volunteer <- nrow(volunteer)/2104
prop_volunteer
combined <- subset(ff_data, ff_data$Classification == "Career" | ff_data$Classification == "Volunteer" )
mosaicplot(table(combined$Classification,combined$Nature.of.death))
table(ff_data$Nature.of.death)
#proportion of deaths of Career firefighters
career <- subset(ff_data, ff_data$Classification == "Career")
prop_career <- nrow(career)/2104
prop_career
#proportion of deaths of Volunteer firefighters
volunteer <- subset(ff_data, ff_data$Classification == "Volunteer")
prop_volunteer <- nrow(volunteer)/2104
prop_volunteer
combined <- subset(ff_data, ff_data$Classification == "Career" | ff_data$Classification == "Volunteer" )
combined2 <- subset(combined, ff_data$Nature.of.death == "Heart Attack" | ff_data$Nature.of.death == "Burns")
mosaicplot(table(combined2$Classification,combined2$Nature.of.death))
View(combined2)
mosaicplot(table(combined2$Classification,combined2$Nature.of.death))
mosaicplot(table(combined2$Classification))
table(combined2$Classification)
View(combined)
table(volunteer$Classification)
View(volunteer)
View(ff_data)
barplot(ff_data$Classification)
?barplot
barplot(table(ff_data$Classification))
barplot(table(volunteer$Classification))
?subset
#proportion of deaths of Career firefighters
career <- subset(ff_data, ff_data$Classification == "Career")
prop_career <- nrow(career)/2104
prop_career
#proportion of deaths of Volunteer firefighters
volunteer <- subset(ff_data, ff_data$Classification == "Volunteer")
prop_volunteer <- nrow(volunteer)/2104
prop_volunteer
barplot(table(ff_data$Classification))
mosaicplot(table(ff_data$Classification, ff_data$Nature.of.death))
#combined <- subset(ff_data, ff_data$Classification == "Career" | ff_data$Classification == "Volunteer" )
#combined2 <- subset(combined, ff_data$Nature.of.death == "Heart Attack" | ff_data$Nature.of.death == "Burns")
library(dplyr)
test <- filter(ff_data, Classification == "Career")
table(test$Classification)
View(test)
library(dplyr)
test <- filter(ff_data, Classification == "Career")
table(test$Classification)
mosaic(table(test$Classification, test$Nature.of.death))
library(dplyr)
test <- filter(ff_data, Classification == "Career")
table(test$Classification)
mosaicplot(table(test$Classification, test$Nature.of.death))
hist(ff_data$Age)
#proportion of deaths due to burns
prop_burns <- nrows(subset(ff_data, ff_data$Nature.of.death == "Burns"))/2104
#proportion of deaths due to burns
prop_burns <- nrow(subset(ff_data, ff_data$Nature.of.death == "Burns"))/2104
prop_burns
#proportion of deaths due to Heart Attack
prop_heart <- nrow(subset(ff_data, ff_data$Nature.of.death == "Heart Attack"))/2104
prop_heart
#Let's explore dataset as a whole
barplot(table(ff_data$Classification))
barplot(table(ff_data$Nature.of.death))
#Age of firefighters
hist(ff_data$Age)
#Let's explore dataset as a whole
barplot(table(ff_data$Classification))
barplot(table(ff_data$Nature.of.death))
#Age of firefighters
hist(ff_data$Age)
summary(ff_data$Age)
summary(ff_data$Age)
#proportion of deaths of Career firefighters
career <- subset(ff_data, ff_data$Classification == "Career")
prop_career <- nrow(career)/2104
prop_career
#proportion of deaths of Volunteer firefighters
volunteer <- subset(ff_data, ff_data$Classification == "Volunteer")
prop_volunteer <- nrow(volunteer)/2104
prop_volunteer
#proportion of deaths due to burns
prop_burns <- nrow(subset(ff_data, ff_data$Nature.of.death == "Burns"))/2104
prop_burns
#proportion of deaths due to Heart Attack
prop_heart <- nrow(subset(ff_data, ff_data$Nature.of.death == "Heart Attack"))/2104
prop_heart
prop.table(table(ff_data$Nature.of.death))
prop.table(table(ff_data$Nature.of.death))
prop.table(table(ff_data$Nature.of.death,useNA='ifany'))
#Let's explore dataset as a whole
barplot(table(ff_data$Classification))
barplot(table(ff_data$Nature.of.death))
#Age of firefighters
hist(ff_data$Age)
summary(ff_data$Age)
prop.table(table(ff_data$Nature.of.death))*100
#Age of firefighters
hist(ff_data$Age)
summary(ff_data$Age)
#Age of firefighters
hist(ff_data$Age)
summary(ff_data$Age)
average(career$Age)
average(career$Age)
#Age of firefighters
hist(ff_data$Age)
summary(ff_data$Age)
mean(career$Age)
View(career)
summary(career$Age)
#Age of firefighters
hist(ff_data$Age)
summary(ff_data$Age)
summary(career$Age)
summary(volunteer$Age)
a <- subset(career,career$Age !is.na)
summary(career$Age)
sd(career$Age)
