View(top_15_skills)
Most_valued_skills <- count(skills2, skill) %>% arrange(desc(n))
Most_valued_skills
top_15_skills <- dbGetQuery(mydb, "select SkillName, count(*) as n from project3.indeeddatascienceskills
group by SkillName
order by 2 desc
Limit 15;")
library(ggplot2)
ggplot(data=top_15_skills, aes(x=SkillName,y=n)) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle("Top 15 Skills Desired in Data Scientist") +
scale_x_discrete(
limits= c("Java", "AI","Tableau", "Natural Language Processing", "MATLAB", "Spark","Hive","Hadoop","C","Data Mining",
"Data Science", "Big Data", "R","Python","Machine Learning")
)
Most_valued_skills <- count(skills2, skill) %>% arrange(desc(n))
Most_valued_skills
top_15_skills <- dbGetQuery(mydb, "select SkillName, count(*) as n from project3.indeeddatascienceskills
group by SkillName
order by 2 desc
Limit 15;")
library(ggplot2)
ggplot(data=top_15_skills, aes(x=SkillName,y=n)) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle("Most Valued Data Science Skills") +
scale_x_discrete(
limits= c("Java", "AI","Tableau", "Natural Language Processing", "MATLAB", "Spark","Hive","Hadoop","C","Data Mining",
"Data Science", "Big Data", "R","Python","Machine Learning")
)
theme(
axis.title.y=element_blank(),        #removes y-axis label
)
Most_valued_skills <- count(skills2, skill) %>% arrange(desc(n))
Most_valued_skills
top_15_skills <- dbGetQuery(mydb, "select SkillName, count(*) as n from project3.indeeddatascienceskills
group by SkillName
order by 2 desc
Limit 15;")
library(ggplot2)
ggplot(data=top_15_skills, aes(x=SkillName,y=n)) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle("Most Valued Data Science Skills") +
scale_x_discrete(
limits= c("Java", "AI","Tableau", "Natural Language Processing", "MATLAB", "Spark","Hive","Hadoop","C","Data Mining",
"Data Science", "Big Data", "R","Python","Machine Learning")
)
theme(
axis.title.y=element_blank()        #removes y-axis label
)
Most_valued_skills <- count(skills2, skill) %>% arrange(desc(n))
Most_valued_skills
top_15_skills <- dbGetQuery(mydb, "select SkillName, count(*) as n from project3.indeeddatascienceskills
group by SkillName
order by 2 desc
Limit 15;")
library(ggplot2)
ggplot(data=top_15_skills, aes(x=SkillName,y=n)) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle("Most Valued Data Science Skills") +
scale_x_discrete(
limits= c("Java", "AI","Tableau", "Natural Language Processing", "MATLAB", "Spark","Hive","Hadoop","C","Data Mining",
"Data Science", "Big Data", "R","Python","Machine Learning")
) +
theme(
axis.title.y=element_blank()        #removes y-axis label
)
Most_valued_skills <- count(skills2, skill) %>% arrange(desc(n))
Most_valued_skills
top_15_skills <- dbGetQuery(mydb, "select SkillName, count(*) as n from project3.indeeddatascienceskills
group by SkillName
order by 2 desc
Limit 15;")
library(ggplot2)
ggplot(data=top_15_skills, aes(x=SkillName,y=n)) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle("Most Valued Data Science Skills") +
scale_x_discrete(
limits= c("Java", "AI","Tableau", "Natural Language Processing", "MATLAB", "Spark","Hive","Hadoop","C","Data Mining",
"Data Science", "Big Data", "R","Python","Machine Learning")
) +
theme(
axis.title.y=element_blank(),
axis.title.x=element_blank(),
)
library(rvest)
library(stringr)
library(RMySQL)
library(tidyr)
library(dplyr)
getData <- function(url, x){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
#test <- str_split(str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}"), ", ")
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
View(getData)
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
IndeedJobTitle_clean
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
IndeedJobTitle_clean
IndeedJobTitle<-"https://www.indeed.com/jobs?q=data+scientist&l=" %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
IndeedJobTitle_clean
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
IndeedJobLocation
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
print(IndeedJobTitle_clean)
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
print(IndeedJobTitle_clean)
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
print(IndeedJobLocation_clean)
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
print(IndeedSkills_clean)
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
print(IndeedJobTitle_clean)
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
print(IndeedJobLocation_clean)
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
print(IndeedSkills_clean)
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
IndeedJobLocation_clean
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <<- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
print(IndeedJobTitle_clean)
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <<- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
print(IndeedJobLocation_clean)
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <<- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
print(IndeedSkills_clean)
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
View(page1)
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <<- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <<- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <<- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=10")
page2 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=20")
page3 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=30")
page4 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=40")
page5 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=50")
page6 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=50")
page6 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
IndeedJobTitle_clean
IndeedJobLocation_clean
IndeedSkills_clean
IndeedSkills<-"https://www.indeed.com/jobs?q=Data+Scientist&start=50" %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills<-"https://www.indeed.com/jobs?q=Data+Scientist&start=50" %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <<- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
IndeedSkills
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=60")
page7 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=70")
page8 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=80")
page9 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=90")
page10 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
View(page10)
View(page10)
View(page10)
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(stringr)
library(RMySQL)
library(tidyr)
library(dplyr)
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <<- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <<- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <<- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=10")
page2 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=20")
page3 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=30")
page4 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=40")
page5 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=50")
page6 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData <- function(url){
IndeedJobTitle<-url %>%
read_html() %>%
html_nodes("#resultsCol .jobtitle") %>%
html_text()
IndeedJobTitle_clean <<- str_extract(IndeedJobTitle, "[[:alpha:]., /-]{2,}")
IndeedJobLocation<-url %>%
read_html() %>%
html_nodes(".location") %>%
html_text()
IndeedJobLocation_clean <<- str_extract(IndeedJobLocation, "[[:alpha:], ]{2,}")
IndeedSkills<-url %>%
read_html() %>%
html_nodes(".experience") %>%
html_text()
IndeedSkills_clean <<- str_extract(str_sub(IndeedSkills, start=22), "[[:alpha:], ]{2,}")
}
getData("https://www.indeed.com/jobs?q=data+scientist&l=")
page1 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=10")
page2 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=20")
page3 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=30")
page4 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
getData("https://www.indeed.com/jobs?q=Data+Scientist&start=40")
page5 <- data.frame(IndeedJobTitle_clean,IndeedJobLocation_clean,IndeedSkills_clean)
?qt
dt(1.65, df=20)
pt(1.65, df=20)
1- pt(1.65, df=20)
1- pt(3, df=2)
1- pt(-1.79, df=19)
setwd("~/GitHub/MSDS/DATA606/Labs")
library(DATA606)
startLab('Lab6')
load("more/atheism.RData")
View(atheism)
us12 <- subset(atheism, nationality == "United States" & year == "2012")
us12 <- subset(atheism, nationality == "United States" & year == "2012")
table(us12$response)
us12 <- subset(atheism, nationality == "United States" & year == "2012")
table(us12$response)/1002
View(us12)
us12 <- subset(atheism, nationality == "United States" & year == "2012")
table(us12$response)/1002
table(atheism$response)
us12 <- subset(atheism, nationality == "United States" & year == "2012")
table(us12$response)/1002
1.96*sqrt((.05*.95)/1002)
inference(us12$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
#Based on output above
0.0634-0.0499
#By hand
1.96*sqrt((.0499*.9501)/1002)
aus12 <- subset(atheism, nationality == "Australia" & year == "2012")
france12 <- subset(atheism, nationality == "France" & year == "2012")
View(aus12)
aus12 <- subset(atheism, nationality == "Australia" & year == "2012")
france12 <- subset(atheism, nationality == "France" & year == "2012")
#Australia
inference(aus12$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
#France
inference(france12$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
knitr::opts_chunk$set(echo = TRUE)
.48 - (1.96*sqrt((.48*.52)/1259))
.48 - (1.96*sqrt((.48*.52)/1259))
.48 - (1.96*sqrt((.48*.52)/1259))
.48 + (1.96*sqrt((.48*.52)/1259))
.48*1259
.52*1259
(0.02/1.96)^2/(.48*.52)
(.48*.52)/(0.02/1.96)^2
(.70-.42) - (1.96*sqrt((.7*.3/819)+(.42*.58)/783))
(.08-.088) - (1.96*sqrt((.08*.92/11545)+(.088*.912)/4691))
(.08-.088) - (1.96*sqrt((.08*.92/11545)+(.088*.912)/4691))
(.08-.088) + (1.96*sqrt((.08*.92/11545)+(.088*.912)/4691))
(.088-.08) - (1.96*sqrt((.08*.92/11545)+(.088*.912)/4691))
(.088-.08) + (1.96*sqrt((.08*.92/11545)+(.088*.912)/4691))
(.08-.088) - (1.96*sqrt((.08*.92/11545)+(.088*.912)/4691))
(.08-.088) + (1.96*sqrt((.08*.92/11545)+(.088*.912)/4691))
426*.048
426*.147
426*.396
1-(.048+.147+.396)
426*.409
426-(20.45+62.62+168.7)
((4-20.45)^2/20.45)+((16-62.62)^2/62.62)+((61-168.7)^2/168.7)+((345-174.23)^2/174.23)
1-pchisq(284.0762, 3)
(7078/10000)*5000
(2922/10000)*5000
(2607/50739)*12215
(2607/50739)*6617
(2607/50739)*17234
(2607/50739)*1290
(2607/50739)*12290
(2607/50739)*2383
(48132/50739)*12215
(48132/50739)*6617
(48132/50739)*17234
(48132/50739)*12290
(48132/50739)*2383
2607/50739
48132/50739
(2607/50739)*6617
(373-339.9854)^2/339.9854
1 - pchisq(20.93,4)
setwd("~/GitHub/MSDS/DATA606/Labs/Lab6")
inference(us12$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
#New Datasets for each country
aus12 <- subset(atheism, nationality == "Australia" & year == "2012")
france12 <- subset(atheism, nationality == "France" & year == "2012")
#Australia - conditions for inference are met
inference(aus12$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
#Margin of error
#Australia - conditions for inference are met
inference(aus12$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
#Margin of error
0.1183-0.1001
#CI
inference(france12$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
0.3089-0.2873
0.1183-0.1001
n <- 1000
p <- seq(0, 1, 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
plot(me ~ p, ylab = "Margin of Error", xlab = "Population Proportion")
p <- 0.1
n <- 1040
p_hats <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats[i] <- sum(samp == "atheist")/n
}
hist(p_hats, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
summary(p_hats)
mean(p_hats)
sd(p_hats)
#First simulation
p <- 0.1
n <- 400
p_hats1 <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats1[i] <- sum(samp == "atheist")/n
}
#Second similation
p <- 0.02
n <- 1040
p_hats2 <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats2[i] <- sum(samp == "atheist")/n
}
#Third similation
p <- 0.02
n <- 400
p_hats3 <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats3[i] <- sum(samp == "atheist")/n
}
par(mfrow = c(2, 2))
hist(p_hats, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
hist(p_hats1, main = "p = 0.1, n = 400", xlim = c(0, 0.18))
hist(p_hats2, main = "p = 0.02, n = 1040", xlim = c(0, 0.18))
hist(p_hats3, main = "p = 0.02, n = 400", xlim = c(0, 0.18))
par(mfrow = c(2, 2))
hist(p_hats, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
hist(p_hats1, main = "p = 0.1, n = 400", xlim = c(0, 0.18))
hist(p_hats2, main = "p = 0.02, n = 1040", xlim = c(-0.05, 0.07))
hist(p_hats3, main = "p = 0.02, n = 400", xlim = c(-0.05, 0.07))
par(mfrow = c(2, 2))
hist(p_hats, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
hist(p_hats1, main = "p = 0.1, n = 400", xlim = c(0, 0.18))
hist(p_hats2, main = "p = 0.02, n = 1040", xlim = c(-0.01, 0.07))
hist(p_hats3, main = "p = 0.02, n = 400", xlim = c(-0.01, 0.07))
par(mfrow = c(1, 1))
.1*1040
.9*1040
.02*400
.92*400
spain12 <- subset(atheism, nationality == "Spain" & year == "2012")
spain05 <- subset(atheism, nationality == "Spain" & year == "2005")
spain12 <- subset(atheism, nationality == "Spain" & year == "2012")
spain05 <- subset(atheism, nationality == "Spain" & year == "2005")
inference(spain12$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
inference(spain05$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
us05 <- subset(atheism, nationality == "United States" & year == "2005")
us05 <- subset(atheism, nationality == "United States" & year == "2005")
inference(us12$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
inference(us05$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
39*.05
.05*39
(.5*.5)/(0.01/1.96)^2
