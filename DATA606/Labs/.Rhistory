?plot
source("more/present.R")
present
dim(present)
names(present)
plot(present$year, present$boys/present$girls)
plot(present$year, present$boys/present$girls)
max(present$boys+present$girls)
which.max(present$boys+present$girls)
which.max(present$boys+present$girls)
present(22)
which.max(present$boys+present$girls)
present[22]
which.max(present$boys+present$girls)
present$year[22]
which.max(present$boys+present$girls)
present$year[22]
present$year(which.max(present$boys+present$girls))
which.max(present$boys+present$girls)
present$year[22]
present$year[which.max(present$boys+present$girls)]
max(present$boys+present$girls)
which.max(present$boys+present$girls)
present$year[22]
present$year[which.max(present$boys+present$girls)]
data(iris)
getLabs()
library(DATA606)
data("iris")
data(iris)
View(present)
c(57,66)
exams <- c(57,66)
exams
boxplot(exams)
exams <- c(57,66,69,71,72,73,74,77,78,78,79,79,81,81,82,83,83,88,89,94)
summary((exams))
boxplot(exams)
45/69
30/34
69-45
45+30
69+34
75+24
30+45
75+8
75+28
library(DATA606)
View(iris)
data(heartTr)
data(iris)
View(present)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
data(iris)
View(present)
View(present)
data("iris")
View(present)
library(XML)
install.packages("XML")
library(XML)
mushrooms <- readHTMLTable("https://archive.ics.uci.edu/ml/machine-learning-databases/mushroom/agaricus-lepiota.data")
test <- htmlParse("https://archive.ics.uci.edu/ml/machine-learning-databases/mushroom/agaricus-lepiota.data")
test <- read.csv(url("https://archive.ics.uci.edu/ml/machine-learning-databases/mushroom/agaricus-lepiota.data"))
install.packages("RSQLite")
install.packages("VennDiagram")
setwd("~/GitHub/MSDS/DATA607/Week 2")
setwd("~/GitHub/MSDS/DATA606/Homework")
ls(package:VennDiagram)
ls(package:"VennDiagram")
ls(package::"VennDiagram")
ls(package::VennDiagram)
venn.plot <- draw.pairwise.venn(100, 70, 30, c("First", "Second"));
grid.draw(venn.plot);
grid.newpage();
library(VennDiagram)
venn.plot <- draw.pairwise.venn(100, 70, 30, c("First", "Second"));
grid.draw(venn.plot);
grid.newpage();
venn.plot
venn.plot <- draw.pairwise.venn(100, 70, 30, c("First", "Second"), scaled = FALSE);
grid.draw(venn.plot);
grid.newpage();
venn.plot <- draw.pairwise.venn(14.6%, 20.7%, 4.2%, c("First", "Second"));
grid.draw(venn.plot);
knitr::opts_chunk$set(echo = TRUE)
(78/204)/(108/204)
(19/204)/(108/204)
(11/204)/(108/204)
72.21+17.59+10.19
(28/95)*(67/94)
(72/95)*(28/95)
(72/95)*(27/94)
(72/95)*(28/94)
library(DATA606)
startLab('Lab2')
setwd("~/GitHub/MSDS/DATA606/Labs")
startLab('Lab2')
load("more/kobe.RData")
head(kobe)
kobe$basket[1:9]
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
avg(calc_streak(kobe$basket))
average(calc_streak(kobe$basket))
mean(calc_streak(kobe$basket))
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)
sim_fair_coin
table(sim_fair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
table(sim_unfair_coin)
?sample
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
sim_basket <- sample(outcomes, size = 133, replace = TRUE, prob = c(0.45, 0.55))
kobe$basket
sim_basket
cal_streak(sim_basket)
calc_streak(sim_basket)
barplot(table(sim_basket))
barplot(table(calc_streak(sim_basket)))
barplot(table(calc_streak(sim_basket)))
mean(calc_streak(sim_basket)))
barplot(table(calc_streak(sim_basket)))
mean(calc_streak(sim_basket))
boxplot(table(calc_streak(sim_basket)))
boxplot(calc_streak(sim_basket))
boxplot(calc_streak(sim_basket), kobe_streak)
boxplot(calc_streak(sim_basket), kobe_streak)
summary(calc_streak(sim_basket))
summary(kobe_streak)
boxplot(calc_streak(sim_basket), kobe_streak)
summary(calc_streak(sim_basket))
summary(kobe_streak)
comp <- kobe_streak - calc_streak(sim_basket)
boxplot(calc_streak(sim_basket), kobe_streak)
summary(calc_streak(sim_basket))
summary(kobe_streak)
mean(kobe_streak) - mean(calc_streak(sim_basket))
boxplot(calc_streak(sim_basket), kobe_streak)
summary(calc_streak(sim_basket))
summary(kobe_streak)
mean(kobe_streak) - mean(calc_streak(sim_basket))
?t.test()
boxplot(calc_streak(sim_basket), kobe_streak)
summary(calc_streak(sim_basket))
summary(kobe_streak)
mean(kobe_streak) - mean(calc_streak(sim_basket))
t.test(kobe_streak, calc_streak(sim_basket),alternative = "two.sided", 0, FALSE)
